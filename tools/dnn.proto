
syntax = "proto3";

package dnn;

message Model {
    string name = 1;
    int64 version = 2;
    repeated int64 input_shape = 4;
    repeated string input_name = 7;
    repeated Node node = 10;
    repeated Parameter input = 12;
    repeated Parameter output = 13;
    double a014 = 14;
}

message Parameter {
    string name = 1;
    Shape shape = 2;
}

message Shape {
    int64 dim0 = 1;
    int64 dim1 = 2;
    int64 dim2 = 3;
    int64 dim3 = 4;
}

message Node {
    Layer layer = 1;
    repeated string input = 2;
    repeated string output = 3;
}

message Layer {
    string name = 1;
    string type = 2;
    uint64 a003 = 3;   // conv
    uint64 a007 = 7;   // pool
    uint64 a008 = 8;   // pool
    uint64 a009 = 9;   // conv
    uint64 a010 = 10;  // conv, pool
    uint64 a011 = 11;  // pool
    float a014 = 14;   // linear
    float a015 = 15;   // linear
    repeated Tensor weight = 50;
    uint64 operation = 72;
    uint64 axis = 65;  // concat
    uint64 a077 = 77;  // conv
    float a079 = 79;   // resize
    uint64 a080 = 80;  // pad
    uint64 a081 = 81;  // pad
    uint64 a082 = 82;  // pad
    uint64 a083 = 83;  // pad
    uint64 a084 = 84;  // pad
    uint64 a085 = 85;  // resize
    uint64 a090 = 90;  // pool
    uint64 a101 = 101; // [conv]
    Buffer a104 = 104; // [conv]
    uint64 a109 = 109; // conv
    uint64 a110 = 110; // [conv]
    uint64 a111 = 111; // conv
    uint64 a112 = 112; // conv
    uint64 a115 = 115; // conv
    uint64 a116 = 116; // [conv]
}

message Buffer {
    bytes data = 5;
}

message Tensor {
    int64 dim0 = 1;
    int64 dim1 = 2;
    int64 dim2 = 3;
    int64 dim3 = 4;
    bytes data1 = 5;
    bytes data2 = 6;
}
