#!/bin/bash

set -e
pushd $(cd $(dirname ${0})/..; pwd) > /dev/null

case "${OSTYPE}" in
    msys*) python="winpty python";;
    *) python=python3;;
esac

bold() {
    echo "$(tty -s && tput bold)$1$(tty -s && tput sgr0)" 
}

venv() {
    venv_dir=./third_party/venv/keras
    [ -d "${venv_dir}" ] || ${python} -m venv ${venv_dir}
    case "${OSTYPE}" in
        msys*) source ${venv_dir}/Scripts/activate ;;
        *) source ${venv_dir}/bin/activate ;;
    esac
    ${python} -m pip install --quiet --upgrade pip
}

clean() {
    bold "keras clean"
    rm -rf "./third_party/venv/keras"
    rm -rf "./third_party/keras"
}

sync() {
    bold "keras sync"
    mkdir -p "./third_party"
    if [ -d "./third_party/keras" ]; then
        git -C "./third_party/keras" pull --quiet --prune
    else
        git -C "./third_party" clone --quiet --recursive https://github.com/keras-team/keras.git
    fi
    git -C "./third_party/keras" submodule sync --quiet
    git -C "./third_party/keras" submodule update --quiet --init --recursive
}

install() {
    bold "keras install"
    venv
    ${python} -m pip install --quiet --upgrade tensorflow
    ${python} -m pip install --quiet ./third_party/keras
    deactivate
}

metadata() {
    bold "keras metadata"
    venv
    export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
    ${python} ./tools/keras-script.py metadata
    deactivate
}

zoo() {
    bold "keras zoo"
    venv
    export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
    ${python} ./tools/keras-script.py zoo
    deactivate
}

while [ "$#" != 0 ]; do
    command="$1" && shift
    case "${command}" in
        "clean") clean;;
        "sync") sync;;
        "install") install;;
        "metadata") metadata;;
        "zoo") zoo;;
    esac
done
