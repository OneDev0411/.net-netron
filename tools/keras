#!/bin/bash

set -e

root=$(cd $(dirname ${0})/..; pwd)
build=${root}/build
tools=${root}/tools
third_party=${root}/third_party

python="python"
pip="pip"

identifier=keras
virtualenv=${build}/virtualenv/${identifier}

git_sync() {
    mkdir -p "${third_party}"
    if [ -d "${third_party}/${1}" ]; then
        git -C "${third_party}/${1}" fetch -p --quiet
        git -C "${third_party}/${1}" reset --quiet --hard origin/master
    else
        echo "Clone ${2}..."
        git -C "${third_party}" clone --recursive ${2}
    fi
    git submodule update --init
}

sync() {
    git_sync keras https://github.com/keras-team/keras.git
}

install() {
    echo "Install Keras"
    virtualenv --quiet -p ${python} ${virtualenv}
    source ${virtualenv}/bin/activate
    ${pip} install --quiet tensorflow
    ${pip} install --quiet ${third_party}/${identifier}
    deactivate
}

metadata() {
    source ${virtualenv}/bin/activate
    echo "Update 'keras-metadata.json'"
    pushd ${tools} > /dev/null
    ${python} keras-script.py
    popd > /dev/null
    deactivate
}

while [ "$#" != 0 ]; do
    command="$1" && shift
    case "${command}" in
        "sync") sync;;
        "install") install;;
        "metadata") metadata;;
    esac
done
